openapi: 3.1.3

info:
  title: Dream-tracker Habit tracking app
  version: '1.0'

servers:
  - url: http://localhost:8080/api

tags:
  - name: habit
  - name: view
  - name: goal
  - name: category

paths:
  /habits:
    post:
      tags:
        - habit
      summary: Create a new Habit
      description: Creates a new habit based on the provided habit details.
      requestBody:
        description: Accepts a single habit object.
        required: true
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Habit'
      responses:
        201:
          description: Habit correctly created
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Habit'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - habit
      summary: Retrieve All Habits
      description: Fetches a list of all habits stored in the database.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Habit'

        500:
          description: Internal server error
  /habits/{habit_id}/category/{category_id}:
    put:
      tags:
        - habit
      summary: Associate a category with a habit
      description: Associates a specific category with an existing habit using their respective identifiers.
      parameters:
        - in: path
          name: habit_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the habit.
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the category to associate.
      responses:
        200:
          description: Category associated with habit successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Habit'
        400:
          description: Bad Request - The request was invalid or cannot be served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found - The habit or category does not exist.


  /habits/{habit_id}:
    put:
      tags:
        - habit
      summary: Update a Specific Habit
      description: Updates the details of an existing habit identified by its unique ID.
      parameters:
        - in: path
          name: habit_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the habit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Habit'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Habit'
        400:
          description: Bad Request - The request was invalid or cannot be served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - habit
      summary: Delete a Specific Habit
      description: Removes a habit from the system using its unique identifier.
      parameters:
        - in: path
          name: habit_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the habit.
      responses:
        204:
          description: Habit properly deleted
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - habit
      summary: Retrieve a Specific Habit
      description: Fetches the details of a habit using its unique identifier.
      parameters:
        - in: path
          name: habit_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the habit.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique identifier of the habit.
                  name:
                    type: string
                    description: The name of the habit.
        400:
          description: Bad Request - The request was invalid or cannot be served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /habits/user/{user_id}:
    get:
      tags:
        - habit
      summary: Retrieve Habits for a User
      description: Fetches all habits associated with a specific user by user ID.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the user.
      responses:
        200:
          description: Success
  # it could be achieved by swinging left for -> true or right for false
  /habits/{habit_id}/count:
    put:
      tags:
        - habit
      summary: Increase the count of done habits by 1
      description: Updates the count status of done habit based on boolean value
      parameters:
        - in: path
          name: habit_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the habit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: boolean
      responses:
        200:
          description: Success

  /goals:
    post:
      tags:
        - goal
      summary: Create goal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        201:
          description: goal correctly created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - goal
      summary: Get all the goals
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        500:
          description: Internal server error
  /goals/user/{user_id}:
    get:
      tags:
        - goal
      summary: Get all the goals of specified user by id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the user.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        500:
          description: Internal server error
  /goals/{goal_id}:
    put:
      tags:
        - goal
      summary: Updates existing goal by id
      parameters:
        - in: path
          name: goal_id
          required: true
          schema:
            type: integer
          description: The unique identifier of a goal to be updated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        400:
          description: Bad Request - The request was invalid or cannot be served.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - goal
      summary: Delete goal by id
      parameters:
        - in: path
          name: goal_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the goal.
      responses:
        204:
          description: Goal properly deleted
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - goal
      summary: Get a specified goal by id
      parameters:
        - in: path
          name: goal_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the goal.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /goals/{goal_id}/habits:
    post:
      tags:
        - goal
      summary: Add a habit to a goal
      description: Associates an existing habit with a specified goal by adding the habit's ID to the goal's habit list.
      parameters:
        - in: path
          name: goal_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the goal to which the habit will be added.
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
      responses:
        200:
          description: Habit added to the goal successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
        400:
          description: Invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Goal not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /categories:
    post:
      tags:
        - category
      summary: Create a new category
      description: Adds a new category to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: The name of the category to be created.
      responses:
        201:
          description: Category created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - category
      summary: Get all categories
      description: Retrieves a list of all categories.
      responses:
        200:
          description: An array of categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        500:
          description: Internal server error

  /categories/{category_id}:
    get:
      tags:
        - category
      summary: Get a specific category
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the category
      description: Retrieves a category by its ID.
      responses:
        200:
          description: Details of a specific category.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: Category not found

    put:
      tags:
        - category
      summary: Update a specific category
      description: Updates the details of an existing category.
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Category updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Category not found

    delete:
      tags:
        - category
      summary: Delete a specific category
      description: Removes a category from the system.
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
          description: The unique identifier of the category
      responses:
        204:
          description: Category deleted successfully.
        404:
          description: Category not found


  /views:
    post:
      tags:
        - view
      summary: Create a new view
      description: Adds a new custom view configuration to the user's profile.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
      responses:
        201:
          description: View created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - view
      summary: Get all views
      description: Retrieves a list of all views configured by the user.
      responses:
        200:
          description: An array of views.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/View'
        500:
          description: Internal server error

  /views/{view_id}:
    parameters:
      - in: path
        name: view_id
        required: true
        schema:
          type: integer
        description: The unique identifier of the view

    get:
      tags:
        - view
      summary: Get a specific view
      description: Retrieves a specific view by its ID.
      responses:
        200:
          description: Details of a specific view.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        404:
          description: View not found

    put:
      tags:
        - view
      summary: Update a specific view
      description: Updates the configuration of an existing view.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/View'
      responses:
        200:
          description: View updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        400:
          description: Bad Request - The request was invalid or cannot be served
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: View not found

    delete:
      tags:
        - view
      summary: Delete a specific view
      description: Removes a view from the system.
      responses:
        204:
          description: View deleted successfully.
        404:
          description: View not found

### Schemas draft
components:
  schemas:
    Habit:
      type: object
      required:
        - id
        - name
        - action
        - frequency
        - duration
        - category
        - difficulty
        - status
        - habitStats
        - habitCharts
      properties:
        id:
          type: string
          format: uuid
          description: 'The unique identifier of the habit.'
          example: 1
        name:
          type: string
          example: 'Morning Run'
        action:
          type: string
          example: 'Running 5km'
        frequency:
          type: string
          enum: [ Daily, Weekly, Monthly ]
          example: 'Daily'
        duration:
          type: integer
          description: 'Amount of activity in specified by frequency time interval'
          example: 30
        difficulty:
          type: string
          enum: [ Easy, Medium, Hard ]
          example: 'Medium'
        status:
          type: string
          enum: [ Active, Inactive ]
          example: 'Active'
        habitStats:
          $ref: '#/components/schemas/HabitStats'
        habitCharts:
          $ref: '#/components/schemas/HabitCharts'
    HabitStats:
      type: object
      description: "This schema contains data about habit implementation status in described by date moment in time"
      required:
       - id
       - date
       - status
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        date:
          type: string
          format: date
          description: 'Date of setting habit status as done or undone in ISO 8601 format'
          nullable: false
        status:
         type: string
         enum:
           - done
           - undone
    HabitCharts:
      type: object
      description: 'This schema aggregates data from Habit and HabitStats'
      required:
        - id
        - notCompletionCounts
        - completionCounts
        - frequencyAdherence
        - difficultyToFrequencyCorrelation
        - improvementTrend
      properties:
        id:
          type: string
          format: uuid
          nullable: false
        notCompletionCounts:
         type: integer
         default: 0
        completionCounts:
          type: integer
          default: 0
        frequencyAdherence:
          type: number
          format: float
          description: 'Percentage of adherence to the planned frequency of the habit.'
        difficultyToFrequencyCorrelation:
          type: number
          format: float
          description: 'Success rate related to the difficulty level of the habit.'
        improvementTrend:
          type: string
          enum:
            - improvement
            - deterioration
            - stagnation
    Goal:
      type: object
      required:
        - id
        - name
        - goalHabitSummary
        - duration
      properties:
        id:
          type: string
          format: uuid
          description: 'The unique identifier of the goal.'
        name:
          type: string
          example: 'Health Improvement'
        duration:
          type: integer
          description: 'Duration of the goal in days'
          example: 60
    GoalHabitSummary:
      type: object
      description: 'This schema keeps track of habits completion from the time when habit is associated with a certain goal'
      required:
        - id
        - amountToComplete
        - actualAmount
        - habit
        - status
      properties:
        id:
          type: string
          format: uuid
        amountToComplete:
          type: integer
          description: 'Number of habitStats records marked as done to finish this part of goal'
        actualAmount:
          type: integer
          description: 'Number of habitStats records marked as done from time when habit is associated with goal'
        habit:

    View:
      type: object
      required:
        - id
        - type
        - layout
      properties:
        id:
          type: integer
          description: 'The unique identifier of the view.'
          example: 200
        type:
          type: string
          enum: [ Habit, Goal, Category ]
          description: 'The focus of the view (habit, goal, or category).'
          example: 'Habit'
        layout:
          type: string
          enum: [ List, Grid, Custom ]
          description: 'The layout format of the view.'
          example: 'Grid'
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: 'The unique identifier of the category.'
          example: 300
        name:
          type: string
          description: 'The name of the category'
          example: 'Fitness'
    Error:
      type: object
      required: [ code, message ]
      properties:
        code:
          type: integer
          description: "Error code representing the type of error"
        message:
          type: string
          description: "Human-readable message describing the error"
        details:
          type: string
          description: "Additional details that might help diagnose the issue"
